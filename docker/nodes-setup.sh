#!/bin/bash

shopt -s expand_aliases
source ./dev-aliases.sh

wait_for_chain_sync() {
  while [ $(40swap-lsp-lncli getinfo | jq '.synced_to_chain') != "true" ]
  do
    sleep 0.3
  done
  while [ $(40swap-alice-lncli getinfo | jq '.synced_to_chain') != "true" ]
  do
    sleep 0.3
  done
  while [ $(40swap-user-lncli getinfo | jq '.synced_to_chain') != "true" ]
  do
    sleep 0.3
  done
}

mining_addr=$(40swap-bitcoin-cli getnewaddress)
40swap-bitcoin-cli generatetoaddress 10 $mining_addr

wait_for_chain_sync

lsp_pubkey=$(40swap-lsp-lncli getinfo |jq -r '.identity_pubkey')
lsp_uri=$(40swap-lsp-lncli getinfo |jq -r '.uris[0]')
alice_pubkey=$(40swap-alice-lncli getinfo |jq -r '.identity_pubkey')
alice_uri=$(40swap-alice-lncli getinfo |jq -r '.uris[0]')
user_pubkey=$(40swap-user-lncli getinfo |jq -r '.identity_pubkey')
user_uri=$(40swap-user-lncli getinfo |jq -r '.uris[0]')

lsp_addr=$(40swap-lsp-lncli newaddress p2wkh | jq -r .address)
alice_addr=$(40swap-alice-lncli newaddress p2wkh  | jq -r .address)
user_addr=$(40swap-user-lncli newaddress p2wkh  | jq -r .address)

for run in {1..10}; do
  40swap-bitcoin-cli -named sendtoaddress address=$lsp_addr  amount=5 fee_rate=25
  40swap-bitcoin-cli -named sendtoaddress address=$alice_addr  amount=5 fee_rate=25
  40swap-bitcoin-cli -named sendtoaddress address=$user_addr  amount=5 fee_rate=25
done
40swap-bitcoin-cli generatetoaddress 3 $mining_addr

40swap-lsp-lncli connect "$alice_uri"
40swap-lsp-lncli connect "$user_uri"
40swap-alice-lncli connect "$user_uri"

wait_for_chain_sync
# opening channels one way
wait_for_chain_sync
40swap-lsp-lncli openchannel $alice_pubkey 5000000
wait_for_chain_sync
40swap-alice-lncli openchannel $user_pubkey 5000000
40swap-bitcoin-cli generatetoaddress 3 $mining_addr

# opening channels the other way
wait_for_chain_sync
40swap-user-lncli openchannel $alice_pubkey 5000000
wait_for_chain_sync
40swap-alice-lncli openchannel $lsp_pubkey 5000000
40swap-bitcoin-cli generatetoaddress 3 $mining_addr

# this is just to bootstrap the graph
wait_for_chain_sync
chan3=$(40swap-lsp-lncli openchannel $user_pubkey 5000000 | jq -r .funding_txid)
40swap-bitcoin-cli generatetoaddress 3 $mining_addr
wait_for_chain_sync
40swap-lsp-lncli closechannel $chan3
40swap-bitcoin-cli generatetoaddress 3 $mining_addr
40swap-lsp-lncli disconnect $user_pubkey

while [ $(40swap-lsp-lncli describegraph | jq '.nodes | length') -lt 3 ]
do
  sleep 0.3
done

lnd_socket=127.0.0.1:10002
lnd_cert=$(docker exec -it 40swap_lnd_lsp base64 -w0 /root/.lnd/tls.cert)
lnd_macaroon=$(docker exec -it 40swap_lnd_lsp base64 -w0 /root/.lnd/data/chain/bitcoin/regtest/admin.macaroon)

read -r -d '' dev_config << EOM
# this file was autogenerated by nodes-setup.sh
lnd:
  socket: $lnd_socket
  cert: $lnd_cert
  macaroon: $lnd_macaroon
EOM

echo "$dev_config" > ../server-backend/dev/40swap.lightning.yml

# Liquid setup:
docker exec -it 40swap_elements elements-cli -chain=liquidregtest unloadwallet ""
docker exec -it 40swap_elements rm -r -f '/home/elements/.elements/liquidregtest/wallets/database' '/home/elements/.elements/liquidregtest/wallets/db.log' '/home/elements/.elements/liquidregtest/wallets/wallet.dat'
docker exec -it 40swap_elements elements-cli -chain=liquidregtest createwallet "" false false "" false true true false
address=$(docker exec -i 40swap_elements elements-cli -chain=liquidregtest getnewaddress | tr -d '\r\n' | xargs)
docker exec -it 40swap_elements elements-cli -chain=liquidregtest generatetoaddress 101 $address
xpub=$(docker exec -it 40swap_elements elements-cli -chain=liquidregtest listdescriptors | jq -r '.descriptors[] | select(.desc | startswith("wpkh(")) | select(.internal==false) | .desc' | sed -E 's/.*\]([^\/]+)\/.*/\1/')

set the xpub of the liquid wallet
read -r -d '' xpub_config << EOM
# this file was autogenerated by nodes-setup.sh
elements:
  network: regtest
  rpcUrl: http://localhost:18884
  rpcUsername: 40swap
  rpcPassword: pass
  xpub: $xpub
  esploraUrl: http://localhost:35000
EOM

echo "$xpub_config" > ../server-backend/dev/40swap.elements.yml
