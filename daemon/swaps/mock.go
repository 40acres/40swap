// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/40acres/40swap/daemon/swaps (interfaces: ClientInterface)
//
// Generated by this command:
//
//	mockgen -destination=mock.go -package=swaps . ClientInterface
//

// Package swaps is a generated GoMock package.
package swaps

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockClientInterface is a mock of ClientInterface interface.
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface.
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance.
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// CreateSwapIn mocks base method.
func (m *MockClientInterface) CreateSwapIn(arg0 context.Context, arg1 *CreateSwapInRequest) (*SwapInResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSwapIn", arg0, arg1)
	ret0, _ := ret[0].(*SwapInResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSwapIn indicates an expected call of CreateSwapIn.
func (mr *MockClientInterfaceMockRecorder) CreateSwapIn(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSwapIn", reflect.TypeOf((*MockClientInterface)(nil).CreateSwapIn), arg0, arg1)
}

// CreateSwapOut mocks base method.
func (m *MockClientInterface) CreateSwapOut(arg0 context.Context, arg1 CreateSwapOutRequest) (*SwapOutResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSwapOut", arg0, arg1)
	ret0, _ := ret[0].(*SwapOutResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSwapOut indicates an expected call of CreateSwapOut.
func (mr *MockClientInterfaceMockRecorder) CreateSwapOut(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSwapOut", reflect.TypeOf((*MockClientInterface)(nil).CreateSwapOut), arg0, arg1)
}

// GetSwapIn mocks base method.
func (m *MockClientInterface) GetSwapIn(arg0 context.Context, arg1 string) (*SwapInResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSwapIn", arg0, arg1)
	ret0, _ := ret[0].(*SwapInResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSwapIn indicates an expected call of GetSwapIn.
func (mr *MockClientInterfaceMockRecorder) GetSwapIn(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSwapIn", reflect.TypeOf((*MockClientInterface)(nil).GetSwapIn), arg0, arg1)
}

// GetSwapOut mocks base method.
func (m *MockClientInterface) GetSwapOut(arg0 context.Context, arg1 string) (*SwapOutResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSwapOut", arg0, arg1)
	ret0, _ := ret[0].(*SwapOutResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSwapOut indicates an expected call of GetSwapOut.
func (mr *MockClientInterfaceMockRecorder) GetSwapOut(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSwapOut", reflect.TypeOf((*MockClientInterface)(nil).GetSwapOut), arg0, arg1)
}
