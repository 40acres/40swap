// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: 40swapd.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum definition for supported blockchain chains.
type Chain int32

const (
	Chain_BITCOIN Chain = 0 // Bitcoin blockchain.
	Chain_LIQUID  Chain = 1 // Liquid sidechain.
)

// Enum value maps for Chain.
var (
	Chain_name = map[int32]string{
		0: "BITCOIN",
		1: "LIQUID",
	}
	Chain_value = map[string]int32{
		"BITCOIN": 0,
		"LIQUID":  1,
	}
)

func (x Chain) Enum() *Chain {
	p := new(Chain)
	*p = x
	return p
}

func (x Chain) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Chain) Descriptor() protoreflect.EnumDescriptor {
	return file__40swapd_proto_enumTypes[0].Descriptor()
}

func (Chain) Type() protoreflect.EnumType {
	return &file__40swapd_proto_enumTypes[0]
}

func (x Chain) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Chain.Descriptor instead.
func (Chain) EnumDescriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{0}
}

// Enum definition for supported network types.
type Network int32

const (
	Network_MAINNET Network = 0 // Main Bitcoin network.
	Network_TESTNET Network = 1 // Bitcoin test network.
	Network_REGTEST Network = 2 // Bitcoin regression test network.
)

// Enum value maps for Network.
var (
	Network_name = map[int32]string{
		0: "MAINNET",
		1: "TESTNET",
		2: "REGTEST",
	}
	Network_value = map[string]int32{
		"MAINNET": 0,
		"TESTNET": 1,
		"REGTEST": 2,
	}
)

func (x Network) Enum() *Network {
	p := new(Network)
	*p = x
	return p
}

func (x Network) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Network) Descriptor() protoreflect.EnumDescriptor {
	return file__40swapd_proto_enumTypes[1].Descriptor()
}

func (Network) Type() protoreflect.EnumType {
	return &file__40swapd_proto_enumTypes[1]
}

func (x Network) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Network.Descriptor instead.
func (Network) EnumDescriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{1}
}

// Enum definition for swap statuses.
type Status int32

const (
	// Happy path statuses.
	Status_CREATED                         Status = 0 // Swap has been created.
	Status_INVOICE_PAYMENT_INTENT_RECEIVED Status = 1 // Payment locked on L2
	Status_CONTRACT_FUNDED_UNCONFIRMED     Status = 2 // Contract funded but unconfirmed (mempool)
	Status_CONTRACT_FUNDED                 Status = 3 // Contract funded and confirmed.
	Status_INVOICE_PAID                    Status = 4 // L2 invoice has been paid.
	Status_CONTRACT_CLAIMED_UNCONFIRMED    Status = 5 // Contract claimed but unconfirmed.
	Status_DONE                            Status = 6 // Swap completed successfully.
	// Expiry-related statuses.
	Status_CONTRACT_REFUNDED_UNCONFIRMED Status = 7 // Contract refunded but unconfirmed.
	Status_CONTRACT_EXPIRED              Status = 8 // Contract expired.
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "CREATED",
		1: "INVOICE_PAYMENT_INTENT_RECEIVED",
		2: "CONTRACT_FUNDED_UNCONFIRMED",
		3: "CONTRACT_FUNDED",
		4: "INVOICE_PAID",
		5: "CONTRACT_CLAIMED_UNCONFIRMED",
		6: "DONE",
		7: "CONTRACT_REFUNDED_UNCONFIRMED",
		8: "CONTRACT_EXPIRED",
	}
	Status_value = map[string]int32{
		"CREATED":                         0,
		"INVOICE_PAYMENT_INTENT_RECEIVED": 1,
		"CONTRACT_FUNDED_UNCONFIRMED":     2,
		"CONTRACT_FUNDED":                 3,
		"INVOICE_PAID":                    4,
		"CONTRACT_CLAIMED_UNCONFIRMED":    5,
		"DONE":                            6,
		"CONTRACT_REFUNDED_UNCONFIRMED":   7,
		"CONTRACT_EXPIRED":                8,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file__40swapd_proto_enumTypes[2].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file__40swapd_proto_enumTypes[2]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{2}
}

// Message definitions for SwapIn operation.
type SwapInRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         Chain                  `protobuf:"varint,1,opt,name=chain,proto3,enum=Chain" json:"chain,omitempty"`                        // Blockchain chain for the swap.
	Invoice       *string                `protobuf:"bytes,2,opt,name=invoice,proto3,oneof" json:"invoice,omitempty"`                          // Invoice to be paid.
	AmountSats    *uint64                `protobuf:"varint,3,opt,name=amount_sats,json=amountSats,proto3,oneof" json:"amount_sats,omitempty"` // Amount in satoshis.
	Expiry        *uint32                `protobuf:"varint,4,opt,name=expiry,proto3,oneof" json:"expiry,omitempty"`                           // Expiry time for the swap.
	RefundTo      string                 `protobuf:"bytes,5,opt,name=refund_to,json=refundTo,proto3" json:"refund_to,omitempty"`              // Address to refund in case of failure.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapInRequest) Reset() {
	*x = SwapInRequest{}
	mi := &file__40swapd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapInRequest) ProtoMessage() {}

func (x *SwapInRequest) ProtoReflect() protoreflect.Message {
	mi := &file__40swapd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapInRequest.ProtoReflect.Descriptor instead.
func (*SwapInRequest) Descriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{0}
}

func (x *SwapInRequest) GetChain() Chain {
	if x != nil {
		return x.Chain
	}
	return Chain_BITCOIN
}

func (x *SwapInRequest) GetInvoice() string {
	if x != nil && x.Invoice != nil {
		return *x.Invoice
	}
	return ""
}

func (x *SwapInRequest) GetAmountSats() uint64 {
	if x != nil && x.AmountSats != nil {
		return *x.AmountSats
	}
	return 0
}

func (x *SwapInRequest) GetExpiry() uint32 {
	if x != nil && x.Expiry != nil {
		return *x.Expiry
	}
	return 0
}

func (x *SwapInRequest) GetRefundTo() string {
	if x != nil {
		return x.RefundTo
	}
	return ""
}

type SwapInResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SwapId        string                 `protobuf:"bytes,1,opt,name=swap_id,json=swapId,proto3" json:"swap_id,omitempty"`                   // Unique identifier for the swap.
	AmountSats    uint64                 `protobuf:"varint,2,opt,name=amount_sats,json=amountSats,proto3" json:"amount_sats,omitempty"`      // Amount in satoshis.
	ClaimAddress  string                 `protobuf:"bytes,3,opt,name=claim_address,json=claimAddress,proto3" json:"claim_address,omitempty"` // Address to claim the funds.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapInResponse) Reset() {
	*x = SwapInResponse{}
	mi := &file__40swapd_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapInResponse) ProtoMessage() {}

func (x *SwapInResponse) ProtoReflect() protoreflect.Message {
	mi := &file__40swapd_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapInResponse.ProtoReflect.Descriptor instead.
func (*SwapInResponse) Descriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{1}
}

func (x *SwapInResponse) GetSwapId() string {
	if x != nil {
		return x.SwapId
	}
	return ""
}

func (x *SwapInResponse) GetAmountSats() uint64 {
	if x != nil {
		return x.AmountSats
	}
	return 0
}

func (x *SwapInResponse) GetClaimAddress() string {
	if x != nil {
		return x.ClaimAddress
	}
	return ""
}

// Message definitions for SwapOut operation.
type SwapOutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         Chain                  `protobuf:"varint,1,opt,name=chain,proto3,enum=Chain" json:"chain,omitempty"`                                    // Blockchain chain for the swap.
	AmountSats    uint64                 `protobuf:"varint,2,opt,name=amount_sats,json=amountSats,proto3" json:"amount_sats,omitempty"`                   // Amount in satoshis.
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                            // Optional destination address.
	MaxRoutingFee *float32               `protobuf:"fixed32,4,opt,name=max_routing_fee,json=maxRoutingFee,proto3,oneof" json:"max_routing_fee,omitempty"` // Maximum routing fee in percentage.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapOutRequest) Reset() {
	*x = SwapOutRequest{}
	mi := &file__40swapd_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapOutRequest) ProtoMessage() {}

func (x *SwapOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file__40swapd_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapOutRequest.ProtoReflect.Descriptor instead.
func (*SwapOutRequest) Descriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{2}
}

func (x *SwapOutRequest) GetChain() Chain {
	if x != nil {
		return x.Chain
	}
	return Chain_BITCOIN
}

func (x *SwapOutRequest) GetAmountSats() uint64 {
	if x != nil {
		return x.AmountSats
	}
	return 0
}

func (x *SwapOutRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SwapOutRequest) GetMaxRoutingFee() float32 {
	if x != nil && x.MaxRoutingFee != nil {
		return *x.MaxRoutingFee
	}
	return 0
}

type SwapOutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapOutResponse) Reset() {
	*x = SwapOutResponse{}
	mi := &file__40swapd_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapOutResponse) ProtoMessage() {}

func (x *SwapOutResponse) ProtoReflect() protoreflect.Message {
	mi := &file__40swapd_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapOutResponse.ProtoReflect.Descriptor instead.
func (*SwapOutResponse) Descriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{3}
}

// Message definitions for querying SwapIn status.
type GetSwapInRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier for the swap.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSwapInRequest) Reset() {
	*x = GetSwapInRequest{}
	mi := &file__40swapd_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSwapInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapInRequest) ProtoMessage() {}

func (x *GetSwapInRequest) ProtoReflect() protoreflect.Message {
	mi := &file__40swapd_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapInRequest.ProtoReflect.Descriptor instead.
func (*GetSwapInRequest) Descriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{4}
}

func (x *GetSwapInRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSwapInResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                               // Unique identifier for the swap.
	ContractAddress    string                 `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`              // Address of the contract.
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                // Timestamp when the swap was created.
	InputAmount        float64                `protobuf:"fixed64,4,opt,name=input_amount,json=inputAmount,proto3" json:"input_amount,omitempty"`                        // Input amount in BTC.
	LockTx             *string                `protobuf:"bytes,5,opt,name=lock_tx,json=lockTx,proto3,oneof" json:"lock_tx,omitempty"`                                   // Lock transaction txid.
	Outcome            *string                `protobuf:"bytes,6,opt,name=outcome,proto3,oneof" json:"outcome,omitempty"`                                               // Outcome of the swap.
	OutputAmount       float64                `protobuf:"fixed64,7,opt,name=output_amount,json=outputAmount,proto3" json:"output_amount,omitempty"`                     // Output amount in BTC.
	RedeemScript       string                 `protobuf:"bytes,8,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`                       // Redeem script for the contract.
	Status             Status                 `protobuf:"varint,9,opt,name=status,proto3,enum=Status" json:"status,omitempty"`                                          // Current status of the swap.
	TimeoutBlockHeight uint32                 `protobuf:"varint,10,opt,name=timeout_block_height,json=timeoutBlockHeight,proto3" json:"timeout_block_height,omitempty"` // Block height at which the swap times out.
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetSwapInResponse) Reset() {
	*x = GetSwapInResponse{}
	mi := &file__40swapd_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSwapInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapInResponse) ProtoMessage() {}

func (x *GetSwapInResponse) ProtoReflect() protoreflect.Message {
	mi := &file__40swapd_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapInResponse.ProtoReflect.Descriptor instead.
func (*GetSwapInResponse) Descriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{5}
}

func (x *GetSwapInResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSwapInResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetSwapInResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetSwapInResponse) GetInputAmount() float64 {
	if x != nil {
		return x.InputAmount
	}
	return 0
}

func (x *GetSwapInResponse) GetLockTx() string {
	if x != nil && x.LockTx != nil {
		return *x.LockTx
	}
	return ""
}

func (x *GetSwapInResponse) GetOutcome() string {
	if x != nil && x.Outcome != nil {
		return *x.Outcome
	}
	return ""
}

func (x *GetSwapInResponse) GetOutputAmount() float64 {
	if x != nil {
		return x.OutputAmount
	}
	return 0
}

func (x *GetSwapInResponse) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *GetSwapInResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_CREATED
}

func (x *GetSwapInResponse) GetTimeoutBlockHeight() uint32 {
	if x != nil {
		return x.TimeoutBlockHeight
	}
	return 0
}

// Message definitions for querying SwapOut status.
type GetSwapOutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier for the swap.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSwapOutRequest) Reset() {
	*x = GetSwapOutRequest{}
	mi := &file__40swapd_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSwapOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapOutRequest) ProtoMessage() {}

func (x *GetSwapOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file__40swapd_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapOutRequest.ProtoReflect.Descriptor instead.
func (*GetSwapOutRequest) Descriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{6}
}

func (x *GetSwapOutRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSwapOutResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                              // Unique identifier for the swap.
	TimeoutBlockHeight uint32                 `protobuf:"varint,2,opt,name=timeout_block_height,json=timeoutBlockHeight,proto3" json:"timeout_block_height,omitempty"` // Block height at which the swap times out.
	Invoice            string                 `protobuf:"bytes,3,opt,name=invoice,proto3" json:"invoice,omitempty"`                                                    // Invoice associated with the swap.
	InputAmount        float64                `protobuf:"fixed64,4,opt,name=input_amount,json=inputAmount,proto3" json:"input_amount,omitempty"`                       // Input amount in BTC.
	OutputAmount       float64                `protobuf:"fixed64,5,opt,name=output_amount,json=outputAmount,proto3" json:"output_amount,omitempty"`                    // Output amount in BTC.
	Status             Status                 `protobuf:"varint,6,opt,name=status,proto3,enum=Status" json:"status,omitempty"`                                         // Current status of the swap.
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                               // Timestamp when the swap was created.
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetSwapOutResponse) Reset() {
	*x = GetSwapOutResponse{}
	mi := &file__40swapd_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSwapOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapOutResponse) ProtoMessage() {}

func (x *GetSwapOutResponse) ProtoReflect() protoreflect.Message {
	mi := &file__40swapd_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapOutResponse.ProtoReflect.Descriptor instead.
func (*GetSwapOutResponse) Descriptor() ([]byte, []int) {
	return file__40swapd_proto_rawDescGZIP(), []int{7}
}

func (x *GetSwapOutResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSwapOutResponse) GetTimeoutBlockHeight() uint32 {
	if x != nil {
		return x.TimeoutBlockHeight
	}
	return 0
}

func (x *GetSwapOutResponse) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

func (x *GetSwapOutResponse) GetInputAmount() float64 {
	if x != nil {
		return x.InputAmount
	}
	return 0
}

func (x *GetSwapOutResponse) GetOutputAmount() float64 {
	if x != nil {
		return x.OutputAmount
	}
	return 0
}

func (x *GetSwapOutResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_CREATED
}

func (x *GetSwapOutResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File__40swapd_proto protoreflect.FileDescriptor

var file__40swapd_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x34, 0x30, 0x73, 0x77, 0x61, 0x70, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd3, 0x01, 0x0a, 0x0d, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x06, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x61,
	0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x6f, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x74, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x6f, 0x0a, 0x0e, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x77, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x77, 0x61, 0x70, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x61,
	0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x53, 0x77, 0x61, 0x70,
	0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0d,
	0x6d, 0x61, 0x78, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x65, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x77, 0x61, 0x70, 0x4f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x77,
	0x61, 0x70, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9e, 0x03, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x74, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x78,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x94, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x4f, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x20, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x49, 0x54, 0x43, 0x4f, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44, 0x10, 0x01, 0x2a, 0x30, 0x0a, 0x07, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x49, 0x4e, 0x4e, 0x45, 0x54,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x45, 0x53, 0x54, 0x4e, 0x45, 0x54, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x54, 0x45, 0x53, 0x54, 0x10, 0x02, 0x2a, 0xe7, 0x01, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x52,
	0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4e,
	0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x10,
	0x04, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x43, 0x4c,
	0x41, 0x49, 0x4d, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x06, 0x12, 0x21, 0x0a,
	0x1d, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44,
	0x45, 0x44, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x07,
	0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x45, 0x58, 0x50,
	0x49, 0x52, 0x45, 0x44, 0x10, 0x08, 0x32, 0xd1, 0x01, 0x0a, 0x0b, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e,
	0x12, 0x0e, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x07, 0x53, 0x77, 0x61, 0x70, 0x4f, 0x75, 0x74, 0x12, 0x0f, 0x2e, 0x53,
	0x77, 0x61, 0x70, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x53, 0x77, 0x61, 0x70, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x12, 0x11, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x4f, 0x75,
	0x74, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x4f,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file__40swapd_proto_rawDescOnce sync.Once
	file__40swapd_proto_rawDescData []byte
)

func file__40swapd_proto_rawDescGZIP() []byte {
	file__40swapd_proto_rawDescOnce.Do(func() {
		file__40swapd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file__40swapd_proto_rawDesc), len(file__40swapd_proto_rawDesc)))
	})
	return file__40swapd_proto_rawDescData
}

var file__40swapd_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file__40swapd_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file__40swapd_proto_goTypes = []any{
	(Chain)(0),                    // 0: Chain
	(Network)(0),                  // 1: Network
	(Status)(0),                   // 2: Status
	(*SwapInRequest)(nil),         // 3: SwapInRequest
	(*SwapInResponse)(nil),        // 4: SwapInResponse
	(*SwapOutRequest)(nil),        // 5: SwapOutRequest
	(*SwapOutResponse)(nil),       // 6: SwapOutResponse
	(*GetSwapInRequest)(nil),      // 7: GetSwapInRequest
	(*GetSwapInResponse)(nil),     // 8: GetSwapInResponse
	(*GetSwapOutRequest)(nil),     // 9: GetSwapOutRequest
	(*GetSwapOutResponse)(nil),    // 10: GetSwapOutResponse
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file__40swapd_proto_depIdxs = []int32{
	0,  // 0: SwapInRequest.chain:type_name -> Chain
	0,  // 1: SwapOutRequest.chain:type_name -> Chain
	11, // 2: GetSwapInResponse.created_at:type_name -> google.protobuf.Timestamp
	2,  // 3: GetSwapInResponse.status:type_name -> Status
	2,  // 4: GetSwapOutResponse.status:type_name -> Status
	11, // 5: GetSwapOutResponse.created_at:type_name -> google.protobuf.Timestamp
	3,  // 6: SwapService.SwapIn:input_type -> SwapInRequest
	5,  // 7: SwapService.SwapOut:input_type -> SwapOutRequest
	7,  // 8: SwapService.GetSwapIn:input_type -> GetSwapInRequest
	9,  // 9: SwapService.GetSwapOut:input_type -> GetSwapOutRequest
	4,  // 10: SwapService.SwapIn:output_type -> SwapInResponse
	6,  // 11: SwapService.SwapOut:output_type -> SwapOutResponse
	8,  // 12: SwapService.GetSwapIn:output_type -> GetSwapInResponse
	10, // 13: SwapService.GetSwapOut:output_type -> GetSwapOutResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file__40swapd_proto_init() }
func file__40swapd_proto_init() {
	if File__40swapd_proto != nil {
		return
	}
	file__40swapd_proto_msgTypes[0].OneofWrappers = []any{}
	file__40swapd_proto_msgTypes[2].OneofWrappers = []any{}
	file__40swapd_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file__40swapd_proto_rawDesc), len(file__40swapd_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file__40swapd_proto_goTypes,
		DependencyIndexes: file__40swapd_proto_depIdxs,
		EnumInfos:         file__40swapd_proto_enumTypes,
		MessageInfos:      file__40swapd_proto_msgTypes,
	}.Build()
	File__40swapd_proto = out.File
	file__40swapd_proto_goTypes = nil
	file__40swapd_proto_depIdxs = nil
}
