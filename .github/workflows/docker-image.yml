name: Docker Image CI

on:
  push:
    branches: [ "master", "main" ]
    tags:
      - "**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_FRONTEND: ${{ github.repository }}-swap-frontend
  IMAGE_NAME_BACKEND: ${{ github.repository }}-server-backend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta-fe
      uses: docker/metadata-action@v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
        tags: |
          type=raw,value={{branch}}-${{github.run_number}}-{{sha}}
          type=raw,value={{branch}}-${{github.run_number}}
    - name: Build and push frontend Docker image
      id: build-and-push-frontend
      uses: docker/build-push-action@v5.0.0
      with:
        context: .
        file: swap-frontend/docker/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-fe.outputs.tags }}
        labels: ${{ steps.meta-fe.outputs.labels }}

    - name: Extract Docker metadata
      id: meta-be
      uses: docker/metadata-action@v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
        tags: |
          type=raw,value={{branch}}-${{github.run_number}}-{{sha}}
          type=raw,value={{branch}}-${{github.run_number}}
    - name: Build and push backend Docker image
      id: build-and-push-backend
      uses: docker/build-push-action@v5.0.0
      with:
        context: .
        file: server-backend/docker/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-be.outputs.tags }}
        labels: ${{ steps.meta-be.outputs.labels }}
